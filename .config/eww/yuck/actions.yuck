(defpoll network_status :interval "1s" "~/.config/eww/scripts/network.sh status")
(defpoll network_icon :interval "1s" "~/.config/eww/scripts/network.sh icon")
(defpoll network_radio :interval "1s" "~/.config/eww/scripts/network.sh radio-status")
(defpoll network_ssid :interval "1s" "~/.config/eww/scripts/network.sh ssid")

(defpoll volume_icon :interval "1s" "~/.config/eww/scripts/volume.sh icon")
(defpoll volume_value :initial "100.0" :interval "1s" "~/.config/eww/scripts/volume.sh vol")
(defpoll is_muted :interval "1s" "~/.config/eww/scripts/volume.sh muted")

(defpoll pfp :interval "1s" "~/.config/eww/scripts/pfp.sh")
(defpoll username :interval "1s" "~/.config/eww/scripts/user.sh")

(defpoll br_icon :interval "1s" "~/.config/eww/scripts/brightness.sh icon")
(defpoll br :initial "100.0" :interval "1s" "~/.config/eww/scripts/brightness.sh br")

(defpoll music_pic :interval "2s" "~/.config/eww/scripts/music/songart.sh get")
(defpoll music_url :interval "1s" "~/.config/eww/scripts/music/songart.sh echo")

(defpoll music_title :interval "1s" "~/.config/eww/scripts/music/songdata.sh title")
(defpoll music_artist :interval "1s" "~/.config/eww/scripts/music/songdata.sh artist")
(defpoll music_status :interval "1s" "~/.config/eww/scripts/music/songdata.sh status")

(defpoll bluetooth_state :interval "1s" "~/.config/eww/scripts/bluetooth state")
(defpoll mic_status :interval "1s" "~/.config/eww/scripts/mic status")

(defwidget actionsbox []
  (button :class "actionsbox hoveronly" :onclick "eww open --toggle actions"
    ;(box :orientation "h"
    ;    :space-evenly false
    ;    :spacing 13
    ;  ; margin are used to fix issues with nerd fonts widths :/
    ;  (label :text "${network_icon}" :style "margin-right: ${network_status == 'Connected' ? '3px' : '0px'};")
    ;  (label :text "${network_radio == 'on' ? '' : ''}")
    ;  (label :text "${volume_icon}" :style "margin-right: 3px;")
    ;  (label :text "${bluetooth_state == 'on' ? '' : ''}")
    ;  (label :text "${mic_status == 'yes' ? '' : ''}" :style "margin-left: -2px;")
    ;)
    (image
      :path "images/icons/chevron-down.svg"
      :image-width 30 :image-height 30
    )
    ;(label :text "")
  )
)
;
;
;
;
;
;
;󰁊


(defwidget sysblock [icon onclick active label]
  (box :class "block-container"
       :orientation "v"
       :space-evenly false
       :spacing 5
    (button :class "block ${active ? 'active' : ''}" :onclick "${onclick}"
      (box :orientation "h"
           :space-evenly false
        (box :class "iconbox"
             :halign "start"
             :space-evenly true
             :orientation "h"
          (label :text "${icon}" :class "icon")
        )
        (box :class "sepbox"
             :halign "center"
             :space-evenly true
             :orientation "h"
          (box :class "sep")
        )
        (box :class "chevronbox"
             :halign "end"
             :space-evenly true
             :orientation "h"
          (label :text "")
        )
      )
    )
    (label :halign "center" :text "${label}" :class "label")
  )
)

(defwidget sysbuttons []
  (box :class "sysbuttonsbox"
       :orientation "v"
       :space-evenly false
       :spacing 20
    (box :class "firstrow"
         :orientation "h"
         :space-evenly true
      (box :halign "start"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${network_icon}"
                  ;:onclick "wezterm -e nmtui"
                  :onclick "nm-connection-editor &"
                  :active "${network_status == 'Connected' ? true : false}"
                  :label "${network_ssid}")
      )
      (box :halign "center"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${bluetooth_state == 'on' ? '' : ''}"
                  :onclick "~/.config/eww/scripts/bluetooth toggle"
                  :active "${bluetooth_state == 'on' ? true : false}"
                  :label "Bluetooth")
      )
      (box :halign "end"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${network_radio == 'on' ? '' : ''}"
                  :onclick "~/.config/eww/scripts/network.sh toggle-radio"
                  :active "${network_radio == 'on' ? false : true}"
                  :label "Airplane")
      )
    )
    (box :class "lastrow"
         :orientation "h"
         :space-evenly true
      ;(box :halign "start"
      ;     :orientation "h"
      ;     :space-evenly true
      ;  (sysblock :icon "${redshift_state == 'on' ? '' : ''}"
      ;            :onclick "~/.config/eww/scripts/redshift toggle"
      ;            :active "${redshift_state == 'on' ? true : false}"
      ;            :label "Night Light")
      ;)
      (box :halign "center"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${volume_icon}"
                  :onclick "~/.config/eww/scripts/volume.sh toggle-muted"
                  :active "${is_muted == 'yes' ? false : true}"
                  :label "Volume")
      )
      (box :halign "end"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${mic_status == 'yes' ? '' : ''}"
                  :onclick "~/.config/eww/scripts/mic toggle"
                  :active "${mic_status == 'yes' ? true : false}"
                  :label "Micro")
      )
    )
  )
)

(defwidget controls []
  (box :class "controlsbox"
       :orientation "v"
       :space-evenly false
       :spacing 10
    (box :orientation "h"
         :space-evenly "false"
         :class "vol-slider"
      (box :class "vol-label"
            volume_icon
      )
      (scale :value volume_value
             :onchange "~/.config/eww/scripts/volume.sh set {}"
             :min 0
             :max 101)
    )
    (box :orientation "h"
         :space-evenly "false"
         :class "br-slider"
      (box :class "br-label"
            br_icon
      )
      (scale :value br
             :onchange "~/.config/eww/scripts/brightness.sh set {}"
             :min 0
             :max 101)
    )
  )
)

(defwidget music []
  (box :class "musicbox"
       :orientation "h"
       :space-evenly false
       :spacing 10
    (box :class "pic-container"
         :orientation "v"
         :space-evenly false
      (box :class "picbox"
           :style "background-image: url('${music_url}');"
           :orientation "h"
           :space-evenly true
        (box :class "left"
             :orientation "v"
             :space-evenly false
             :halign "start"
             :spacing 4
          (label :halign "start" :text "${music_title}" :class "title")
          (label :halign "start" :text "${music_artist}" :class "artist")
        )
      )
      (box :class "hidden"
        music_pic
      )
    )
    (box :class "musiccontrolsbox"
         :orientation "v"
         :space-evenly true
      (button :valign "start"
              :halign "center"
              :onclick "~/.config/eww/scripts/music/control.sh prev"
              :class "previousbutton"
        ""
      )
      (button :valign "center"
              :halign "center"
              :onclick "~/.config/eww/scripts/music/control.sh play-pause"
              :class "pausebutton"
        "${music_status == 'Playing' ? '' : ''}"
      )
      (button :valign "end"
              :halign "center"
              :onclick "~/.config/eww/scripts/music/control.sh next"
              :class "nextbutton"
        ""
      )
    )
  )
)

(defwidget user []
  (box :class "userinfobox"
       :orientation "h"
       :space-evenly true
    (box :class "info"
         :space-evenly false
         :orientation "h"
         :halign "start"
         :valign "center"
         :spacing 10
      (box :class "pfp"
           :style "background-image: url('${pfp}');")
      (label :text "${username}" :class "username")
    )
    (box :class "useractions"
         :space-evenly false
         :orientation "h"
         :halign "end"
         :valign "center"
      (button :class "logout" :onclick "hyprctl dispatch exit"
        ""
      )
    )
  )
)

(defwidget actions []
  (box :class "actions"
       :orientation "v"
       :space-evenly false
       :spacing 20
    (user)
    (sysbuttons)
    (music)
    (controls)
  )
)

(defwindow actions
  :monitor 0
  :geometry (geometry :x "6px"
                      :y "6px"
                      :width "320px"
                      :height "10px"
                      :anchor "top right")
  :type "dock"
  :wm-ignore true
(actions))
